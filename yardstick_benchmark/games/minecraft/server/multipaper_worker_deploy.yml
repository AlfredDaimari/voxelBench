# setup worker nodes
- name: Setup worker node
  hosts: all

  tasks:
    - name: Update packages
      become: yes
      become_user: root
      become_method: sudo
      apt:
        update_cache: yes

    - name: Setup java environment
      become: yes
      become_user: root
      become_method: sudo
      apt:
        name: openjdk-17-jdk-headless

    - name: Setup worker node working directory
      file:
        path: ~/worker
        state: directory
        mode: "0755"

    # can't use this now, servers were down
    - name: Download multipaper worker
      when: true
      get_url:
        url: "https://api.multipaper.io/v2/projects/multipaper/versions/1.20.1/builds/57/downloads/multipaper-1.20.1-57.jar"
        dest: "~/worker/multipaper-1.20.1-57.jar"

    # use this when servers are down
    - name: Copy multipaper worker
      when: false
      copy:
        src: ./downloads/multipaper-1.20.1-57.jar
        dest: ~/worker/multipaper-1.20.1-57.jar

    # download the dasel cli
    - name: Download dasel cli
      become: yes
      become_user: root
      become_method: sudo
      shell: |
        curl -sSLf "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | grep -v .gz | cut -d\" -f 4)" -L -o dasel && chmod a+x dasel
        mv ./dasel /usr/local/bin/dasel

    - name: Template run multipaper worker
      shell: | 
        nohup java -jar multipaper-1.20.1-57.jar </dev/null >template.log &
        echo $! > template.pid
      args:
        chdir: ~/worker

    # Wait for template generation (Connecting to localhost:35353) 
    - name: Wait for template generation on worker to complete
      shell: |
        sleep 5
        while true; do
          COUNT=$( cat template.log | grep -c "Connecting to localhost" )
          if [[ $COUNT -ge 1 ]]; then
            exit
          fi
          sleep 1
        done
      args:
        chdir: ~/worker
        executable: /bin/bash

    - name: Gracefully shutdown worker template run
      shell: |
        kill -SIGTERM $(cat template.pid)
        rm template.log
      args:
        chdir: ~/worker
        executable: /bin/bash
 
    - name: Download Jolokia JVM Agent
      get_url:
        url: https://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-agent-jvm/2.0.3/jolokia-agent-jvm-2.0.3-javaagent.jar
        dest: "~/worker/jolokia-agent-jvm-2.0.3-javaagent.jar"
    
    - name: Copy config file
      template:
        src: "{{server_properties_template}}"
        dest: "~/worker/server.properties" 

